<?php

namespace App\Http\Controllers;

use App\Entities\{{ entityName }};
use App\Http\Requests\{{ entityName }}CreateRequest;
use App\Http\Requests\{{ entityName }}UpdateRequest;
use App\Http\Resources\{{ entityName }}Resource;
use App\Utilities\Services\ExceptionService;
use Illuminate\Support\Facades\DB;
use Smoothsystem\Manager\Utilities\Traits\ManagerController;

class {{ entityName }}Controller extends Controller
{
    use ManagerController {
        ManagerController::__construct as private __coreConstruct;
    }

    public function __construct({{ entityName }} $repository)
    {
        $this->repository = $repository;
        $this->resource = {{ entityName }}Resource::class;
        $this->view = {{ entityNameDashCase }}

        $this->__coreConstruct();
    }

    public function store({{ entityName }}CreateRequest $request) {
        try {
            DB::beginTransaction();

            $data = $this->repository->create($request->only($this->fillable));

            DB::commit();

            return redirect()->back()->with('message', 'Data created.');
        } catch (\Exception $e) {
            DB::rollback();

            ExceptionService::log($e);

            return response()->json([
                'error' => true,
                'message' => $e->getMessage()
            ]);
        }
    }

    public function update({{ entityName }}UpdateRequest $request, $id) {
        try {
            DB::beginTransaction();

            $this->repository->where('id', $id)->update($request->only($this->fillable));

            DB::commit();

            return redirect()->back()->with('message', 'Data created.');
        } catch (\Exception $e) {
            DB::rollback();

            ExceptionService::log($e);

            if ($request->wantsJson()) {
                return response()->json([
                    'error' => true,
                    'message' => $e->getMessage()
                ]);
            }

            return redirect()->back()->withErrors($e->getMessage())->withInput();
        }
    }

}
